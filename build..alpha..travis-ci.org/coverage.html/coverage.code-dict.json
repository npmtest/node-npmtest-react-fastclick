{"/home/travis/build/npmtest/node-npmtest-react-fastclick/test.js":"/* istanbul instrument in package npmtest_react_fastclick */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-fastclick/lib.npmtest_react_fastclick.js":"/* istanbul instrument in package npmtest_react_fastclick */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_fastclick = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_fastclick = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-fastclick/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-fastclick && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_fastclick */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_fastclick\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_fastclick.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_fastclick.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_fastclick.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_fastclick.__dirname + '/lib.npmtest_react_fastclick.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-fastclick/node_modules/react-fastclick/src/index.js":"'use strict';\n\n(function () {\n  var getReactFCInitializer = function (React) {\n    return function initializeReactFastclick () {\n      var originalCreateElement = React.createElement;\n\n      // Moved if Math.abs(downX - upX) > MOVE_THRESHOLD;\n      var MOVE_THRESHOLD = 8;\n      var TOUCH_DELAY = 1000;\n\n      var touchKeysToStore = [\n        'clientX',\n        'clientY',\n        'pageX',\n        'pageY',\n        'screenX',\n        'screenY',\n        'radiusX',\n        'radiusY'\n      ];\n\n      var touchEvents = {\n        downPos: {},\n        lastPos: {}\n      };\n\n      var isDisabled = function (element) {\n        if (!element) {\n          return false;\n        }\n        var disabled = element.getAttribute('disabled');\n\n        return disabled !== false && disabled !== null;\n      };\n\n      var focus = function (event, target) {\n        var myTarget = target || event.currentTarget;\n\n        if (!myTarget || isDisabled(myTarget)) {\n          return;\n        }\n\n        myTarget.focus();\n      };\n\n      var handleType = {\n        input: function (event) {\n          focus(event);\n          event.stopPropagation();\n        },\n        textarea: function (event) {\n          focus(event);\n          event.stopPropagation();\n        },\n        select: function (event) {\n          focus(event);\n          event.stopPropagation();\n        },\n        label: function (event) {\n          var input;\n\n          var forTarget = event.currentTarget.getAttribute('for');\n\n          if (forTarget) {\n            input = document.getElementById(forTarget);\n          } else {\n            input = event.currentTarget.querySelectorAll('input, textarea, select')[0];\n          }\n\n          if (input) {\n            focus(event, input);\n          }\n        }\n      };\n\n      var fakeClickEvent = function (event) {\n        if (typeof event.persist === 'function') {\n          event.persist();\n        }\n\n        event.fastclick = true;\n        event.type = 'click';\n        event.button = 0;\n      };\n\n      var copyTouchKeys = function (touch, target) {\n        if (typeof target.persist === 'function') {\n          target.persist();\n        }\n\n        if (touch) {\n          for (var i = 0; i < touchKeysToStore.length; i += 1) {\n            var key = touchKeysToStore[i];\n            target[key] = touch[key];\n          }\n        }\n      };\n\n      var noTouchHappened = function () {\n        return !touchEvents.touched && (\n          !touchEvents.lastTouchDate || new Date().getTime() > touchEvents.lastTouchDate + TOUCH_DELAY\n        );\n      };\n\n      var invalidateIfMoreThanOneTouch = function (event) {\n        touchEvents.invalid = event.touches && event.touches.length > 1 || touchEvents.invalid;\n      };\n\n      var onMouseEvent = function (callback, event) {\n        // Prevent any mouse events if we touched recently\n        if (typeof callback === 'function' && noTouchHappened()) {\n          callback(event);\n        }\n        if (event.type === 'click') {\n          touchEvents.invalid = false;\n          touchEvents.touched = false;\n          touchEvents.moved = false;\n        }\n      };\n\n      var onTouchStart = function (callback, event) {\n        touchEvents.invalid = false;\n        touchEvents.moved = false;\n        touchEvents.touched = true;\n        touchEvents.lastTouchDate = new Date().getTime();\n\n        copyTouchKeys(event.touches[0], touchEvents.downPos);\n        copyTouchKeys(event.touches[0], touchEvents.lastPos);\n\n        invalidateIfMoreThanOneTouch(event);\n\n        if (typeof callback === 'function') {\n          callback(event);\n        }\n      };\n\n      var onTouchMove = function (callback, event) {\n        touchEvents.touched = true;\n        touchEvents.lastTouchDate = new Date().getTime();\n\n        copyTouchKeys(event.touches[0], touchEvents.lastPos);\n\n        invalidateIfMoreThanOneTouch(event);\n\n        if (Math.abs(touchEvents.downPos.clientX - touchEvents.lastPos.clientX) > MOVE_THRESHOLD ||\n          Math.abs(touchEvents.downPos.clientY - touchEvents.lastPos.clientY) > MOVE_THRESHOLD) {\n          touchEvents.moved = true;\n        }\n\n        if (typeof callback === 'function') {\n          callback(event);\n        }\n      };\n\n      var onTouchEnd = function (callback, onClick, type, event) {\n        touchEvents.touched = true;\n        touchEvents.lastTouchDate = new Date().getTime();\n\n        invalidateIfMoreThanOneTouch(event);\n\n        if (typeof callback === 'function') {\n          callback(event);\n        }\n\n        if (!touchEvents.invalid && !touchEvents.moved) {\n          var box = event.currentTarget.getBoundingClientRect();\n\n          if (touchEvents.lastPos.clientX - (touchEvents.lastPos.radiusX || 0) <= box.right &&\n            touchEvents.lastPos.clientX + (touchEvents.lastPos.radiusX || 0) >= box.left &&\n            touchEvents.lastPos.clientY - (touchEvents.lastPos.radiusY || 0) <= box.bottom &&\n            touchEvents.lastPos.clientY + (touchEvents.lastPos.radiusY || 0) >= box.top) {\n\n            if (!isDisabled(event.currentTarget)) {\n              if (typeof onClick === 'function') {\n                copyTouchKeys(touchEvents.lastPos, event);\n                fakeClickEvent(event);\n                onClick(event);\n              }\n\n              if (!event.defaultPrevented && handleType[type]) {\n                handleType[type](event);\n              }\n            }\n          }\n        }\n      };\n\n      var propsWithFastclickEvents = function (type, props) {\n        var newProps = {};\n\n        // Loop over props\n        for (var key in props) {\n          // Copy props to newProps\n          newProps[key] = props[key];\n        }\n\n        // Apply our wrapped mouse and touch handlers\n        newProps.onClick = onMouseEvent.bind(null, props.onClick);\n        newProps.onMouseDown = onMouseEvent.bind(null, props.onMouseDown);\n        newProps.onMouseMove = onMouseEvent.bind(null, props.onMouseMove);\n        newProps.onMouseUp = onMouseEvent.bind(null, props.onMouseUp);\n        newProps.onTouchStart = onTouchStart.bind(null, props.onTouchStart);\n        newProps.onTouchMove = onTouchMove.bind(null, props.onTouchMove);\n        newProps.onTouchEnd = onTouchEnd.bind(null, props.onTouchEnd, props.onClick, type);\n\n        if (typeof Object.freeze === 'function') {\n          Object.freeze(newProps);\n        }\n\n        return newProps;\n      };\n\n      React.createElement = function () {\n        // Convert arguments to array\n        var args = Array.prototype.slice.call(arguments);\n\n        var type = args[0];\n        var props = args[1];\n\n        // Check if basic element & has onClick prop\n        if (type && typeof type === 'string' && (\n          (props && typeof props.onClick === 'function') || handleType[type]\n        )) {\n          // Add our own events to props\n          args[1] = propsWithFastclickEvents(type, props || {});\n        }\n\n        // Apply args to original createElement function\n        return originalCreateElement.apply(null, args);\n      };\n\n      if (typeof React.DOM === 'object') {\n        for (var key in React.DOM) {\n          React.DOM[key] = React.createElement.bind(null, key);\n        }\n      }\n    };\n  };\n\n  /* istanbul ignore next */\n  // Export for commonjs / browserify\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    var React = require('react');\n    module.exports = getReactFCInitializer(React);\n  // Export for amd / require\n  } else if (typeof define === 'function' && define.amd) { // eslint-disable-line no-undef\n    define(['react'], function (ReactAMD) { // eslint-disable-line no-undef\n      return getReactFCInitializer(ReactAMD);\n    });\n  // Export globally\n  } else {\n    var root;\n\n    if (typeof window !== 'undefined') {\n      root = window;\n    } else if (typeof global !== 'undefined') {\n      root = global;\n    } else if (typeof self !== 'undefined') {\n      root = self;\n    } else {\n      root = this;\n    }\n\n    root.Reorder = getReactFCInitializer(root.React);\n  }\n})();\n"}